{"version":3,"sources":["components/Navbar.jsx","components/Like.jsx","components/Paging.jsx","components/Genres.jsx","components/Sort.jsx","components/Table.jsx","components/Input.jsx","components/Search.jsx","services/http.js","services/genreService.js","services/movieService.js","components/Movies.jsx","components/Select.jsx","components/Form.jsx","services/userService.js","components/LoginForm.jsx","components/RegisterForm.jsx","components/MovieForm.jsx","components/ProtectedRoute.jsx","components/Counter.jsx","App.js","components/Counters.jsx","serviceWorker.js","index.js"],"names":["Navbar","props","className","to","user","name","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","onClick","e","localStorage","removeItem","window","location","Like","like","starClick","movie","style","color","fontSize","cursor","Paging","contentArr","filter","currentGenres","genres","totalPage","pageSize","Math","ceil","length","currentPage","Number","pagingClick","indexArr","i","push","key","Genres","allGenres","arr","forEach","element","sort","item","pos","ary","genresClick","map","Sort","sortClick","colName","Table","scope","isAdmin","a","_id","tittle","stock","click","slice","Input","htmlFor","label","value","onChange","handleChange","error","Search","marginTop","handleSearch","searchValue","axios","defaults","headers","common","getItem","interceptors","response","use","good","Promise","resolve","toast","data","reject","get","post","delete","put","getGenres","http","then","result","console","log","process","m","catch","info","getGenreId","find","getMovies","each","title","numberInStock","genre","dailyRentalRate","deleteMovie","getMovie","postMovie","genreService","g","rate","genreId","obj","updateMovie","Movies","componentWillMount","movieService","allMovies","setState","pre","movies","oriMovies","state","preState","pageNum","partMovies","sortOrder","reverse","b","currentTarget","reg","RegExp","match","this","Component","Select","disabled","options","Form","validateProperty","Joi","validate","schema","abortEarly","details","message","errors","path","handleSubmit","preventDefault","doSubmit","renderButton","renderInput","renderSelect","registerUser","email","username","password","setItem","loginUser","Boolean","jwtDecode","LoginFrom","string","min","required","userService","toPage","pathname","isAuthed","history","onSubmit","RegisterFrom","MovieForm","Date","now","toString","number","Object","assign","valid","params","replace","componentDidMount","ProtectedRoute","showWithAuth","showWithoutAuth","rest","render","Counter","preProps","counterParams","handleIncrement","handleDecrement","handleDelete","children","App","LoginForm","RegisterForm","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d37bc82e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link, Route, Switch } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n  const logout = (e) => {\r\n\r\n   localStorage.removeItem(\"token\")\r\n   \r\n   //props.history.push(\"/\")\r\n   window.location=\"/login\"\r\n  \r\n    \r\n  }\r\n  \r\n\r\n  return (\r\n    // <nav className=\"navbar navbar-light bg-light\">\r\n    //     <span className=\"navbar-brand mb-0 h1\">Navbar <span className=\"badge badge-pill badge-secondary\">{totalCounters}</span>\r\n\r\n\r\n\r\n    //     {/* <i className=\"far fa-heart\">ww</i>\r\n    //     <i className=\"fas fa-heart\"></i>\r\n    //     <i className=\"fas fa-star\" style={{color:\"green\",fontSize: 44}}></i> */}\r\n    //     </span>\r\n    // </nav>);  \r\n\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"#\">\r\n        {props.user.name}\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n\r\n\r\n          <Link className=\"nav-item nav-link active\" to=\"/movie\">Movie <span className=\"sr-only\">(current)</span></Link>\r\n\r\n          {\r\n            props.user\r\n              ? (<React.Fragment>\r\n                <Link className=\"nav-item nav-link\" to=\"/profile\">{props.user.name} </Link>\r\n                <Link className=\"nav-item nav-link\" to=\"/login\" onClick={logout}>Logout</Link>\r\n              </React.Fragment>)\r\n              : (<React.Fragment>\r\n                <Link className=\"nav-item nav-link\" to=\"/login\">Login </Link>\r\n                <Link className=\"nav-item nav-link\" to=\"/register\">Register</Link>\r\n              </React.Fragment>)\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n          <Link className=\"nav-item nav-link\" to=\"#\">Pricing</Link>\r\n          <Link className=\"nav-item nav-link disabled\" to=\"#\">Disabled</Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// class Navbar extends Component {\r\n\r\n//     render() {\r\n//         return (\r\n//             <nav className=\"navbar navbar-light bg-light\">\r\n//                 <span className=\"navbar-brand mb-0 h1\">{this.props.children}</span>\r\n//             </nav>);\r\n//     }\r\n// }; \r\n\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Like = (props) => {\r\n\r\n    return (\r\n\r\n        <i\r\n            className={(props.like) ? \"fas fa-star\" : \"far fa-star\"}\r\n            onClick={() => { props.starClick(props.movie) }}\r\n            style={{ color: \"orange\", fontSize: 30, cursor: \"pointer\" }}\r\n        />\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Like;","import React from 'react';\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Paging = (props) => {\r\n\r\n    const contentArr = props.contentArr.filter((e) => {\r\n      \r\n      return  (props.currentGenres === \"All\")\r\n        ?e\r\n        : (props.currentGenres === e.genres.name) ?e:null\r\n      \r\n    });\r\n    const pageSize = props.pageSize;\r\n    const genres = props.currentGenres;\r\n    const totalPage = Math.ceil(contentArr.length / props.pageSize);\r\n    const currentPage = Number(props.currentPage) > totalPage ? totalPage : Number(props.currentPage);\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <nav aria-label=\"Page navigation example\" >\r\n            <ul className=\"pagination\">\r\n\r\n                <li\r\n                    className=\"page-item\"\r\n                    onClick={() => { props.pagingClick(currentPage - 1 || 1) }}>\r\n                    <a className=\"page-link\" >Previous</a>\r\n                </li>\r\n\r\n                {(function () {\r\n                    const indexArr = []\r\n                    for (let i = 1; i <= totalPage; i++) {\r\n\r\n                        indexArr.push(\r\n                            <li key={i}\r\n                                className={(currentPage === i) ? \"page-item active\" : \"page-item\"}\r\n                                onClick={() => { props.pagingClick(i) }}>\r\n                                <a className=\"page-link\" style={{cursor:\"pointer\"}}>{i}</a>\r\n                            </li>)\r\n                    }\r\n                    return indexArr\r\n                })()} \r\n                <li\r\n                    className=\"page-item\"\r\n                    onClick={() => { props.pagingClick((currentPage + 1 > totalPage) ? totalPage : (currentPage + 1)) }}>\r\n                    <a className=\"page-link\" >Next</a>\r\n                </li>\r\n\r\n            </ul>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nPaging.propTypes = {\r\n    contentArr: PropTypes.array.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    handlePageChange: PropTypes.func,\r\n    genres: PropTypes.string\r\n\r\n}\r\n\r\nexport default Paging;","import React from 'react';\r\n\r\n// import genreService from \"../services/genreService\"\r\n\r\n// genreService.getGenres().then(g=>{\r\n//     console.log(g)\r\n// })\r\n\r\n\r\n\r\nconst Genres = (props) => {\r\n\r\n\r\n    const genres = props.allGenres\r\n\r\n\r\n\r\n    const genres2 = (() => {\r\n        const arr = [];\r\n\r\n        props.contentArr.forEach(element => {\r\n            arr.push(element.genres.name)\r\n        })\r\n        return arr.sort().filter(function (item, pos, ary) {\r\n            return !pos || item !== ary[pos - 1];\r\n        })\r\n    })()\r\n\r\n\r\n\r\n\r\n\r\n    const currentGenres = props.currentGenres\r\n\r\n\r\n    return (\r\n\r\n        < React.Fragment>\r\n\r\n\r\n            <ul className=\"list-group\" style={{ cursor: \"pointer\" }}>\r\n                <li\r\n                    className={(props.currentGenres === \"All\") ? \"list-group-item active\" : \"list-group-item\"}\r\n                    onClick={() => { props.genresClick(\"All\") }}\r\n                >\r\n                    Genres\r\n                </li>\r\n                {\r\n                    genres.map((e, i) => {\r\n\r\n                        return <li key={i}\r\n                            className={(props.currentGenres === e) ? \"list-group-item active\" : \"list-group-item \"}\r\n                            onClick={() => { props.genresClick(e) }}>\r\n                            {e}\r\n                        </li>\r\n                    })\r\n                }\r\n\r\n\r\n            </ul>\r\n\r\n        </ React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Genres;","import React, { Component } from 'react';\r\nconst Sort = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n\r\n\r\n\r\n            {/* <i\r\n                className=\"fas fa-sort-up\" style={{fontSize:\"20px\"}}  onClick={()=>{props.sortClick(props.colName)}}\r\n               \r\n            />\r\n          <i className=\"fas fa-sort-up\"></i>\r\n\r\n          <i className=\"fas fa-angle-down\"></i> */}\r\n          <i className=\"fas fa-long-arrow-alt-down\" style={{fontSize:\"20px\"}} onClick={()=>{props.sortClick(props.colName)}}></i>\r\n          <i className=\"fas fa-long-arrow-alt-up\" style={{fontSize:\"20px\"}} onClick={()=>{props.sortClick(props.colName)}}></i>\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Sort;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport Like from \"./Like\"\r\nimport Sort from \"./Sort\"\r\n\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nconst Table = (props) => {\r\n\r\n    const contentArr = props.contentArr.filter((e) => {\r\n        return (props.currentGenres === \"All\")\r\n            ? e\r\n            : (props.currentGenres === e.genres.name) ? e : null\r\n    });\r\n    const pageSize = props.pageSize;\r\n    const genres = props.currentGenres;\r\n    const totalPage = Math.ceil(contentArr.length / props.pageSize);\r\n    const currentPage = Number(props.currentPage) > totalPage ? totalPage : Number(props.currentPage);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <div>\r\n                    <h5 className=\"my-3\" style={{ fontSize: 20 }}>Showing {contentArr.length} movies</h5>\r\n                    <table className=\"table text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">\r\n                                    Tittle&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    <Sort sortClick={props.sortClick} colName=\"tittle\" />\r\n\r\n\r\n                                </th>\r\n                                <th scope=\"col\">Genres\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    <Sort sortClick={props.sortClick} colName=\"genres\" />\r\n\r\n                                </th>\r\n                                <th scope=\"col\">Stock\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    <Sort sortClick={props.sortClick} colName=\"stock\" />\r\n\r\n                                </th>\r\n                                <th scope=\"col\">Like</th>\r\n                                {props.user.isAdmin &&\r\n                                    <th scope=\"col\">Button</th>\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                contentArr.map((a, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <th scope=\"row\">{i + 1}</th>\r\n                                            <td><Link to={\"/movie/\" + a._id}> {a.tittle}</Link></td>\r\n                                            <td> {a.genres.name} </td>\r\n                                            <td> {a.stock} </td>\r\n                                            <td><Like like={a.like} starClick={props.starClick} movie={a} /></td>\r\n                                            {/* <td><button onClick={props.click.bind(null, a)} className=\"btn btn-danger\">Delete</button></td> */}\r\n\r\n\r\n                                            {props.user.isAdmin &&\r\n                                                <td><button onClick={() => { props.click(a) }} className=\"btn btn-danger\">Delete</button></td>\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                }).slice((currentPage - 1) * pageSize, (currentPage - 1) * pageSize + pageSize)\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nconst Input = (props) => {\r\n    return (\r\n\r\n        <div className=\"form-group\">\r\n            <label htmlFor={props.name}>{props.label}</label>\r\n            <input\r\n                // autoFocus\r\n                //  ref={this.username}\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                name={props.name}\r\n                type={props.type}\r\n                className=\"form-control\"\r\n                id={props.name}\r\n            />\r\n\r\n\r\n\r\n            {props.error && <div className=\"alert alert-danger \" >{props.error}</div>}\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Input;","\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport Joi from 'joi-browser'\r\nimport Input from './Input'\r\n\r\nimport { getMovies, saveMovie, getMovie, saveMovie2 } from '../services/fakeMovieService'\r\n\r\nimport { getGenres } from '../services/fakeGenreService'\r\n\r\nconst Search = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                style={{marginTop:10}}\r\n                className=\"form-control\"\r\n                onChange={props.handleSearch}\r\n                value={props.searchValue}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Search;","\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify'\r\n\r\naxios.defaults.headers.common['x-auth-token']= localStorage.getItem(\"token\")||\"a\"\r\n\r\naxios.interceptors.response.use(\r\n\r\n    good => {\r\n\r\n        //alert(good)\r\n        return Promise.resolve(good)\r\n    },\r\n    error => {\r\n       // toast.error(\"An error occured\")\r\n      //  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500\r\n      //  if (!expectedError) {\r\n      //      toast.error(`${error}`)\r\n         \r\n      //  }\r\n\r\n        toast.error(error.response.data)\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    delete: axios.delete,\r\n    put: axios.put,\r\n\r\n}","import http from './http'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\n//const url = process.env.NODE_ENV\r\n\r\nconst url = process.env.NODE_ENV === \"development\" ? \"http://localhost:3900\" : \"\"\r\n\r\nfunction getGenres(){\r\n\r\n    \r\n\r\n\r\n   return http.get(url+\"/api/genres\")\r\n    .then(result=>{\r\n\r\n        console.log(process.env)\r\n        return result.data.map(m=>{\r\n\r\n            return m.name\r\n        })\r\n    })\r\n    .catch(error=>{\r\n        toast.info(\"cannot get single movie\")\r\n\r\n        return Promise.reject(error)\r\n\r\n    })\r\n}\r\n\r\nfunction getGenreId(name){\r\n    return http.get(url+\"/api/genres\")\r\n    .then(result=>{\r\n        return result.data.find(m=>{\r\n\r\n            return m.name===name\r\n        })\r\n    })\r\n    .catch(error=>{\r\n        toast.info(\"cannot get single movie\")\r\n\r\n        return Promise.reject(error)\r\n\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\nasync function getGenres2() {\r\n   const result = await http.get(url+\"/api/genres\")\r\n    return result.data.map(m=>{\r\n\r\n        return m.name\r\n    })\r\n\r\n  }\r\n\r\n\r\nexport default {\r\n\r\n    getGenres,\r\n    getGenreId,\r\n}\r\n","import http from './http'\r\nimport { toast } from 'react-toastify'\r\nimport genreService from './genreService'\r\n\r\n\r\nconst url = process.env.NODE_ENV === \"development\" ? \"http://localhost:3900\" : \"\"\r\n\r\nfunction updateMovie(movie){\r\n\r\n    console.log(movie.id)\r\n\r\n    return genreService.getGenreId(movie.genre).then(g => {\r\n    \r\n     \r\n        return {\r\n\r\n            title: movie.title,\r\n            numberInStock: movie.stock,\r\n            dailyRentalRate: movie.rate,\r\n            genreId: g._id\r\n        }\r\n    \r\n    }).then(obj => {\r\n        console.log(obj)\r\n        return http.put(`${url}/api/movies/${movie.id}`, obj)\r\n\r\n    })  .then(result => {\r\n        return result\r\n    })\r\n    .catch(error => {\r\n\r\n        toast.info(\"cannot update movie\")\r\n\r\n        return Promise.reject(error)\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction postMovie(movie) {\r\n\r\n\r\n\r\n    return genreService.getGenreId(movie.genre).then(g => {\r\n\r\n        console.log(g._id)\r\n        // return genres.find(e => e=== movie.genre)\r\n        return {\r\n\r\n            title: movie.title,\r\n            numberInStock: movie.stock,\r\n            dailyRentalRate: movie.rate,\r\n            genreId: g._id\r\n        }\r\n\r\n    })\r\n        .then(obj => {\r\n          \r\n            return http.post(`${url}/api/movies/`, obj)\r\n\r\n        })\r\n        .then(result => {\r\n            return result\r\n        })\r\n        .catch(error => {\r\n\r\n            toast.info(\"canot post a new movie\")\r\n \r\n            return Promise.reject(error)\r\n        })\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction deleteMovie(id) {\r\n    return http.delete(`${url}/api/movies/${id}`)\r\n        .then(m => {\r\n            toast.info(\"deleted\")\r\n\r\n            return Promise.resolve(m)\r\n        })\r\n        .catch(error => {\r\n\r\n            toast.info(\"cannot delete\")\r\n\r\n            return Promise.reject(error)\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction getMovies() {\r\n    return http.get(`${url}/api/movies`)\r\n        .then(result => {\r\n\r\n            return result.data.map(each => {\r\n                return {\r\n                    _id: each._id,\r\n                    tittle: each.title,\r\n                    stock: each.numberInStock,\r\n                    genres: each.genre,\r\n                    dailyRentalRate: each.dailyRentalRate\r\n                }\r\n            })\r\n        })\r\n        .catch(error => {\r\n            toast.info(\"cannot get all movies\")\r\n\r\n            return Promise.reject(error)\r\n\r\n        })\r\n}\r\n\r\nfunction getMovie(id) {\r\n\r\n    return http.get(`${url}/api/movies/${id}`)\r\n        .then(result => {\r\n            return {\r\n                _id: result.data._id,\r\n                tittle: result.data.title,\r\n                stock: result.data.numberInStock,\r\n                genres: result.data.genre,\r\n                dailyRentalRate: result.data.dailyRentalRate\r\n            }\r\n\r\n        })\r\n        .catch(error => {\r\n            toast.info(\"cannot get single movie\")\r\n\r\n            return Promise.reject(error)\r\n\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n\r\n    getMovies,\r\n    deleteMovie,\r\n    getMovie,\r\n    postMovie,\r\n    updateMovie,\r\n}\r\n","import React, { Component } from \"react\"\r\n\r\nimport { getMovies, deleteMovie } from '../services/fakeMovieService'\r\n\r\nimport Like from \"./Like\"\r\nimport Paging from \"./Paging\"\r\nimport Genres from \"./Genres\"\r\nimport Table from \"./Table\"\r\nimport Search from \"./Search\"\r\n\r\nimport { Link, Route, Switch } from \"react-router-dom\"\r\n\r\nimport movieService from \"../services/movieService\"\r\n\r\nimport genreService from \"../services/genreService\"\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n\r\n\r\n\r\nclass Movies extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        //  console.log(props)\r\n        //  console.log(\"a\" < \"b\")\r\n        this.state = {\r\n\r\n\r\n            movies: [],//getMovies(),\r\n            pageSize: 3,\r\n            currentPage: 1,\r\n            currentGenres: \"All\",\r\n            sortOrder: \"xxx\",\r\n            searchValue: \"\",\r\n            allGenres: [\"\"],\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentWillMount = () => {\r\n\r\n\r\n        movieService.getMovies().then(allMovies => {\r\n\r\n\r\n            this.setState(pre => {\r\n                return pre.movies = allMovies\r\n\r\n            })\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        genreService.getGenres().then(g => {\r\n            this.setState(pre => {\r\n                return pre.allGenres = g\r\n\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    click = (movie) => {\r\n        console.log(movie._id)\r\n\r\n        const oriMovies = this.state.movies\r\n\r\n        this.setState(function (preState) {\r\n\r\n            return preState.movies = preState.movies.filter(e => { return e._id !== movie._id })\r\n\r\n\r\n        })\r\n\r\n        movieService.deleteMovie(movie._id).catch(e => {\r\n\r\n            this.setState(pre => {\r\n\r\n                return pre.movies = oriMovies\r\n            })\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    starClick = (movie) => {\r\n\r\n\r\n        this.setState(function (preState) {\r\n\r\n            return preState.movies = preState.movies.map(e => {\r\n                return (e === movie)\r\n                    ? { ...e, ...{ like: !e.like } }\r\n                    : e\r\n            })\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    pagingClick = (pageNum) => {\r\n\r\n        this.setState((preState) => {\r\n            return preState.currentPage = pageNum\r\n\r\n\r\n        })\r\n    }\r\n\r\n    genresClick = (genres) => {\r\n        movieService.getMovies().then(allMovies => {\r\n\r\n\r\n\r\n            const partMovies = allMovies.filter((m) => {\r\n                if (genres === \"All\") {\r\n                    return m\r\n                }\r\n                else {\r\n                    return m.genres.name === genres\r\n                }\r\n            })\r\n\r\n            this.setState(\r\n                preState => {\r\n                    preState.currentGenres = genres;\r\n                    preState.movies = partMovies;\r\n                    return preState\r\n                }\r\n            )\r\n\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    sortClick = (colName) => {\r\n        console.log(colName);\r\n        let arr = [];\r\n        if (this.state.sortOrder === colName) {\r\n            arr = this.state.movies.reverse()\r\n        }\r\n        else {\r\n            arr = this.state.movies.sort((a, b) => {\r\n                if (colName === \"genres\") {\r\n\r\n                    if (a[colName][\"name\"] > b[colName][\"name\"]) {\r\n                        return -1\r\n                    }\r\n                    else if (a[colName][\"name\"] === b[colName][\"name\"]) {\r\n                        return 0\r\n                    }\r\n                    else {\r\n                        return 1\r\n                    }\r\n                }\r\n                else {\r\n                    if (a[colName] > b[colName]) {\r\n\r\n                        return -1\r\n                    }\r\n                    else if (a[colName] === b[colName]) {\r\n                        return 0\r\n                    }\r\n                    else {\r\n                        return 1\r\n                    }\r\n                }\r\n            })\r\n            //  this.state.sortOrder = colName\r\n        }\r\n        this.setState(preState => {\r\n\r\n\r\n            preState.sortOrder = colName\r\n            return preState.movies = arr\r\n\r\n        })\r\n\r\n    }\r\n    handleSearch = (e) => {\r\n\r\n\r\n\r\n        const searchValue = e.currentTarget.value\r\n        const reg = new RegExp(`^.*${searchValue}.*$`, \"i\")\r\n\r\n        movieService.getMovies().then(allMovies => {\r\n\r\n\r\n            const movies = allMovies.filter((m) => {\r\n\r\n                //     console.log(m.tittle.match(reg))\r\n                if (m.tittle.match(reg)) {\r\n                    return m\r\n                }\r\n                else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n\r\n\r\n            this.setState(preState => {\r\n                preState.movies = movies\r\n                preState.currentGenres = \"All\"\r\n                return preState.searchValue = searchValue\r\n            })\r\n        });\r\n\r\n\r\n\r\n\r\n        //  const movies = [this.state.movies.pop()]\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        // if (!this.state.movies.length) {\r\n        //     return <h1>no movies</h1>\r\n        // }\r\n\r\n\r\n        //    else\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {/* <Switch> */}\r\n                {/* <Route path=\"/home\" render={(props) => { return <Movies {...props} /> }} /> */}\r\n                {/* <Route path=\"/home\" render={(props) => { return <h1>aa</h1> }} /> */}\r\n\r\n                {/* </Switch> */}\r\n\r\n\r\n                <ToastContainer />\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-2 my-5 text-center\">\r\n                        <Genres\r\n                            contentArr={this.state.movies}\r\n                            allGenres={this.state.allGenres}\r\n                            genresClick={this.genresClick}\r\n                            currentGenres={this.state.currentGenres}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-9\">\r\n\r\n                        {this.props.user && <Link\r\n                            className=\"btn btn-primary mt-5 mb-2\"\r\n                            to=\"/movie/new\"\r\n                        >\r\n                            New movie\r\n                           </Link>}\r\n\r\n\r\n                        <Search\r\n                            handleSearch={this.handleSearch}\r\n                            searchValue={this.state.searchValue}\r\n                        />\r\n\r\n\r\n\r\n                        <Table\r\n                            contentArr={this.state.movies}\r\n                            pageSize={this.state.pageSize}\r\n                            currentPage={this.state.currentPage}\r\n                            currentGenres={this.state.currentGenres}\r\n\r\n                            starClick={this.starClick}\r\n                            pagingClick={this.pagingClick}\r\n                            click={this.click}\r\n\r\n                            sortClick={this.sortClick}\r\n\r\n                            user={this.props.user}\r\n                        />\r\n                        <Paging\r\n                            {... {\r\n                                contentArr: this.state.movies,\r\n                                pageSize: this.state.pageSize,\r\n                                currentPage: this.state.currentPage,\r\n                                currentGenres: this.state.currentGenres,\r\n\r\n                                starClick: this.starClick,\r\n                                pagingClick: this.pagingClick,\r\n                                click: this.click,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Movies","import React, { Component } from 'react';\r\nconst Select = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={props.name}>{props.label}</label>\r\n\r\n            <select\r\n                className=\"form-control\"\r\n            //    defaultValue={props.value || \"DEFAULT\"}\r\n                onChange={props.handleChange}\r\n                name={props.name}\r\n                id={props.name}\r\n                value={props.value}\r\n            >\r\n                <option value=\"DEFAULT\" disabled={true}> -- select an option -- </option>\r\n                {\r\n                    props.options.map((e, i) => {\r\n                        return <option value={e} key={i}>{e}</option>\r\n                    })\r\n                }\r\n                <option>aaa</option>\r\n\r\n            </select>\r\n            {props.error && <div className=\"alert alert-danger \" >{props.error}</div>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser'\r\nimport Input from './Input'\r\nimport Select from './Select'\r\n\r\nclass Form extends Component {\r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n\r\n\r\n        const data = { ...this.state.data }\r\n        const error = { ...this.state.error }\r\n        \r\n        data[e.currentTarget.name] =  e.currentTarget.value\r\n        \r\n        \r\n        \r\n        \r\n        error[e.currentTarget.name] = this.validateProperty(e)\r\n\r\n        this.setState(preState => {\r\n            preState.data = data\r\n            preState.error = error\r\n            return preState\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    validateProperty = (e) => {\r\n\r\n        const result = Joi.validate(e.currentTarget.value, this.schema[e.currentTarget.name], { abortEarly: false })\r\n        return result.error ? result.error.details[0].message : null\r\n    }\r\n\r\n\r\n    validate = () => {\r\n    \r\n       \r\n        const result = Joi.validate(this.state.data, this.schema, { abortEarly: false })\r\n     \r\n        if (!result.error) return false\r\n\r\n        const errors = {}\r\n        for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n//console.log(errors)\r\n        return errors;\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        this.setState(preState => {\r\n\r\n            return preState.error = this.validate()\r\n        })\r\n        this.doSubmit();\r\n    };\r\n\r\n    renderButton = (label) => {\r\n\r\n        return (\r\n            <button\r\n                disabled={this.validate()}\r\n                onClick={this.handleSubmit}\r\n                className=\"btn btn-primary\">\r\n                {label}\r\n            </button>\r\n        )\r\n    }\r\n\r\n    renderInput = (name, label, type = \"text\") => {\r\n\r\n        return (\r\n            <Input\r\n                value={this.state.data[name]}\r\n                handleChange={this.handleChange}\r\n                name={name}\r\n                type={type}\r\n                label={label}\r\n                className=\"form-control\"\r\n                id={name}\r\n                error={this.state.error[name]}\r\n            />\r\n        )\r\n    }\r\n\r\n    \r\n    renderSelect = (name, label, options, value) => {\r\n        return (\r\n            <Select\r\n\r\n                name={name}\r\n                label={label}\r\n                value={value}\r\n                options={options}\r\n                id={name}\r\n                handleChange={this.handleChange}\r\n                error={this.state.error[name]}\r\n\r\n\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Form;","import http from './http'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport jwtDecode from \"jwt-decode\"\r\nimport { get } from 'http'\r\n\r\n\r\nconst url = process.env.NODE_ENV === \"development\" ? \"http://localhost:3900\" : \"\"\r\nfunction registerUser(user) {\r\n\r\n\r\n    //console.log(user)\r\n\r\n    return http.post(url + '/api/users',\r\n        {\r\n            name: user.name,\r\n            email: user.username,\r\n            password: user.password\r\n\r\n        })\r\n        .then(result => {\r\n\r\n            toast.info(\"user registed\")\r\n\r\n            localStorage.setItem(\"token\", result.headers[\"x-auth-token\"])\r\n            return Promise.resolve(result)\r\n        })\r\n        .catch(error => {\r\n            toast.info(\"cannot register a new user\")\r\n            return Promise.reject(error)\r\n        })\r\n\r\n}\r\n\r\nfunction loginUser(user) {\r\n\r\n    return http.post(url+'/api/auth',\r\n        {\r\n            email: user.username,\r\n            password: user.password\r\n        })\r\n        .then(result => {\r\n            toast.info(\"user logged\")\r\n\r\n            localStorage.setItem(\"token\", result.data)\r\n            return Promise.resolve(result)\r\n        })\r\n        .catch(error => {\r\n            toast.info(\"cannot login\")\r\n            return Promise.reject(error)\r\n        })\r\n\r\n\r\n}\r\n\r\nfunction isAuthed() {\r\n    return Boolean(localStorage.getItem(\"token\") ? jwtDecode(localStorage.getItem(\"token\")) : \"\")\r\n}\r\n\r\n\r\n\r\nexport default {\r\n\r\n    registerUser,\r\n    loginUser,\r\n    get isAuthed() { return isAuthed() }\r\n\r\n}","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser'\r\nimport Form from './Form'\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport userService from '../services/userService'\r\n\r\nclass LoginFrom extends Form {\r\n\r\nconstructor(props){\r\n    super(props)\r\n    if (userService.isAuthed) {\r\n        this.props.history.push(\"/movie\")\r\n    }\r\n}\r\n\r\n    state = {\r\n        data: { username: \"aaa@aaa\", password: \"aaaaa\" },\r\n        error: {},\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.props.location)\r\n    }\r\n\r\n\r\n    schema = {\r\n        username: Joi.string().min(3).required().label(\"Username\"),\r\n        password: Joi.string().required().label(\"Password\"),\r\n    }\r\n\r\n    doSubmit = () => {\r\n        userService.loginUser(this.state.data)\r\n            .then(result => {\r\n\r\n\r\n            \r\n                //  this.props.history.push(\"/movie\")\r\n                window.location =\r\n\r\n                    this.props.location.state\r\n                        ? this.props.location.state.toPage.pathname\r\n                        : \"/movie\"\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n\r\n                this.setState(pre => {\r\n\r\n                    return pre.error = { username: error.response.data }\r\n\r\n                })\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        //if (userService.isAuthed) {\r\n          //  return <Redirect to=\"/movie\" />\r\n        \r\n        //}\r\n\r\n        return (\r\n            <div>\r\n                <ToastContainer />\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                    {this.renderButton(\"Login\")}\r\n\r\n\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LoginFrom;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser'\r\nimport Form from './Form'\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport userService from '../services/userService'\r\n\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nclass RegisterFrom extends Form {\r\n    state = {\r\n        data: { username: \"aaa@aaa\", password: \"aaaaa\", name: \"aaa\" },\r\n        error: {}\r\n\r\n    }\r\n    schema = {\r\n        username: Joi.string().email().required().label(\"Username\"),\r\n        password: Joi.string().min(3).required().label(\"Password\"),\r\n        name: Joi.string().required().label(\"Name\")\r\n    }\r\n\r\n    doSubmit = () => {\r\n        userService.registerUser(this.state.data)\r\n            .then(result => {\r\n\r\n                window.location =\"/movie\"\r\n\r\n                // userService.loginUser(this.state.data)\r\n                // .then(result=>{\r\n                //     console.log(result)\r\n                // })\r\n                // .catch(error=>{\r\n                //     console.log(error)\r\n\r\n                // })\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n\r\n\r\n\r\n                const reg = /\"([\\w]+)\"/\r\n                const obj = { ...this.state.error };\r\n\r\n\r\n                obj[error.response.data.match(reg) ? error.response.data.match(reg)[1] : \"username\"] = error.response.data\r\n            \r\n\r\n\r\n\r\n                this.setState(pre => {\r\n\r\n                    return pre.error = obj\r\n\r\n                })\r\n\r\n            })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (userService.isAuthed) {\r\n            return <Redirect to=\"/movie\" />\r\n        }\r\n\r\n        return (\r\n\r\n\r\n            <div>\r\n\r\n                <ToastContainer />\r\n                <h1>Register</h1>\r\n\r\n\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                    {this.renderInput(\"name\", \"Name\")}\r\n\r\n                    {this.renderButton(\"Register\")}\r\n\r\n\r\n\r\n\r\n\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterFrom;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser'\r\nimport Form from './Form'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { getMovies, saveMovie, getMovie, saveMovie2 } from '../services/fakeMovieService'\r\n\r\nimport movieService from \"../services/movieService\"\r\nimport genreService from \"../services/genreService\"\r\n\r\nimport { getGenres } from '../services/fakeGenreService'\r\n\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: { id: Date.now().toString(), title: \"AAA\", genre: \"Action\", stock: 2, rate: 6 },\r\n        error: {},\r\n        allGenres: [],\r\n    }\r\n\r\n    schema = {\r\n        id: Joi.string(),\r\n        title: Joi.string().min(3).required().label(\"Title\"),\r\n        //  genre: Joi.string().required().valid(...[]).label(\"Genre\"),\r\n        stock: Joi.number().required().label(\"Number in Stock\"),\r\n        rate: Joi.number().required().label(\"Rate\")\r\n    }\r\n    componentWillMount = () => {\r\n        if (!this.schema.genre) {\r\n\r\n            genreService.getGenres().then(allGenres => {\r\n                Object.assign(\r\n                    this.schema,\r\n                    { genre: Joi.string().required().valid(...allGenres).label(\"Genre\") }\r\n\r\n                )\r\n                this.setState(pre => {\r\n                    return pre.allGenres = allGenres\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n\r\n\r\n        if (this.props.match.params.id === \"new\") { return null }\r\n\r\n        movieService.getMovie(this.props.match.params.id).then(movie => {\r\n\r\n            if (movie) {\r\n                this.setState(preState => {\r\n                    return preState.data = {\r\n                        id: movie._id,\r\n                        title: movie.tittle,\r\n                        genre: movie.genres.name,\r\n                        stock: movie.stock,\r\n                        rate: movie.dailyRentalRate\r\n\r\n                    }\r\n\r\n                })\r\n            }\r\n            else {\r\n                console.log(this.props)\r\n                return this.props.history.replace(\"/not-found\")\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    componentDidMount = () => {\r\n        //    console.log(\"aaaaaaaaaaaa\", this.state.data.genre.name)\r\n        //   this.state.data.genre.name\r\n    }\r\n\r\n\r\n    doSubmit = () => {\r\n        this.state.data.id.length === 24\r\n            ? movieService.updateMovie(this.state.data).then(m => { this.props.history.push(\"/movie\") })\r\n            : movieService.postMovie(this.state.data)\r\n                .then(m => { this.props.history.push(\"/movie\") })\r\n                .catch(error => {\r\n                    //  Object.assign(this.state.error,\r\n\r\n\r\n                    const reg = /\"([\\w]+)\"/\r\n                    const obj = { ...this.state.error };\r\n                    obj[error.response.data.match(reg)[1]] = error.response.data\r\n\r\n\r\n                    this.setState(pre => {\r\n                        \r\n                        return pre.error = obj\r\n                       \r\n                    })\r\n\r\n\r\n                })\r\n        //  movieService.postMovie(this.state.data).then(m => {\r\n        //      this.props.history.push(\"/movie\")\r\n        //  })\r\n\r\n\r\n\r\n        //saveMovie2(this.state.data)\r\n        //  this.props.history.push(\"/movie\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <ToastContainer />\r\n                <h1>MovieForm\r\n\r\n              {this.props.match.params.id}\r\n\r\n                </h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"title\", \"Title\")}\r\n\r\n\r\n                    {this.renderSelect(\"genre\", \"Genre\", this.state.allGenres, this.state.data.genre)}\r\n\r\n                    {this.renderInput(\"stock\", \"Number in Stock\")}\r\n                    {this.renderInput(\"rate\", \"Rate\")}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieForm;","import React, { Component } from 'react';\r\nimport jwtDecode from \"jwt-decode\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst ProtectedRoute = ({ showWithAuth, showWithoutAuth, ...rest }) => {\r\n\r\n    const user = localStorage.getItem(\"token\") ? jwtDecode(localStorage.getItem(\"token\")) : \"\";\r\n    //<Route path=\"/movie\" render={(props) => { return <Movies {...props}  user={this.state.user} /> }} />\r\n  \r\n\r\n    return (\r\n\r\n       \r\n        <Route\r\n\r\n            {...rest}\r\n             render={\r\n\r\n                \r\n                 (props) => {\r\n                   return user\r\n                   ?showWithAuth(props)\r\n                   :   (showWithoutAuth)\r\n                            ?showWithoutAuth(props)\r\n                            :<Redirect to={{pathname:\"/login\", state:{toPage:props.location}}} /> \r\n\r\n\r\n                \r\n               \r\n                 }\r\n            \r\n            }\r\n\r\n\r\n        // (props) => {\r\n        //     return (\r\n        //         <React.Fragment>\r\n\r\n        //            { user&&<Component {...{...props,...rest}}  />}\r\n        //         </React.Fragment>\r\n\r\n        //     )\r\n        // }\r\n\r\n\r\n\r\n        />\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ProtectedRoute;","import React, { Component } from 'react';\r\nclass Counter extends Component {\r\n\r\n\r\n\r\n    // state = {\r\n\r\n    //     value: this.props.counterParams.value,\r\n    //     //     tags: [\"aaa\", \"bbb\", \"ccc\"],\r\n    //     get formatBadge() {\r\n    //         return (this.value === 0)\r\n    //             ? \"badge badge-warning m-2\"\r\n    //             : \"badge badge-primary m-2\"\r\n\r\n    //     },\r\n    //     get formatCount() {\r\n    //         return (this.value || \"Zero\")\r\n    //     }\r\n    //  }\r\n\r\n    // increment = () => {\r\n    //     console.log(this.props)\r\n    //     this.setState(pre => ({\r\n    //         value: pre.value + 1,\r\n    //         get formatBadge() {\r\n    //             return (this.value === 0)\r\n    //                 ? \"badge badge-warning m-2\"\r\n    //                 : \"badge badge-primary m-2\"\r\n\r\n    //         },\r\n    //         get formatCount() {\r\n    //             return (this.value || \"Zero\")\r\n    //         }\r\n\r\n    //     }))\r\n    // }\r\n\r\n\r\n\r\n\r\n    // decrement = () => {\r\n    //     this.setState(pre => ({\r\n    //         value: pre.value === 0 ? 0 : pre.value - 1,\r\n    //         get formatBadge() {\r\n    //             return (this.value === 0)\r\n    //                 ? \"badge badge-warning m-2\"\r\n    //                 : \"badge badge-primary m-2\"\r\n\r\n    //         },\r\n    //         get formatCount() {\r\n    //             return (this.value || \"Zero\")\r\n    //         }\r\n\r\n\r\n\r\n    //     }))\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n    //styles = {\r\n    //    fontSize: 20,\r\n    // color: \"#f2f2f2\",\r\n    // width: \"100px\",\r\n\r\n\r\n    //}\r\n\r\n    componentDidUpdate(preProps, preState) {\r\n        console.log(\"updated --\", preState)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"will unmount\")\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"rendered --\")\r\n     \r\n        const { value, id } = this.props.counterParams;\r\n        //console.log(\"---\",this.props.state.counterParams)\r\n        return (\r\n            <div className=\"row\">\r\n\r\n                {/* handleDelete={this.props.handleDelete}\r\n                        handleIncrement={this.props.handleIncrement}\r\n                        handleDecrement={this.props.handleDecrement}\r\n                        reset={this.props.reset}\r\n                        state={this.props.state} */}\r\n\r\n                <div className=\"col-2\">\r\n                    <span style={{ fontSize: 20 }} className={value > 0 ? \"badge badge-primary m-2\" : \"badge badge-warning m-1\"} >{value === 0 ? \"Zero\" : value}</span>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-10\">\r\n                    <button onClick={() => { this.props.handleIncrement(id) }} className=\"btn btn-secondary\" >+</button>\r\n\r\n                    <button onClick={() => this.props.handleDecrement(id)} className=\"btn btn-secondary m-2 \" {...{ disabled: !Boolean(value) }}>-</button>\r\n\r\n                    <button onClick={() => this.props.handleDelete(id)} className=\"btn btn-danger\">x</button>\r\n\r\n                    {this.props.children}\r\n                </div>\r\n\r\n                {/* <div class=\"col-6\">\r\n                    </div> */}\r\n\r\n                {/* <ul>\r\n                    {this.state.tags.map((e, i) => { return (<li key={i}>{e}</li>) }).length === 0 && \"there is no movies\"}\r\n                    {\r\n                    \r\n                            this.state.tags.map((e, i) => { return (<li key={i}>{e}</li>) })\r\n\r\n                    }\r\n                </ul> */}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Movies from \"./components/Movies\"\nimport LoginForm from \"./components/LoginForm\"\nimport RegisterForm from \"./components/RegisterForm\"\nimport MovieForm from \"./components/MovieForm\"\n\nimport ProtectedRoute from \"./components/ProtectedRoute\"\n\nimport Counter from \"./components/Counter\"\nimport Counters from './components/Counters';\n\nimport { Route, Switch, Redirect } from \"react-router-dom\"\n\n\nimport jwtDecode from \"jwt-decode\"\n\nclass App extends Component {\n\n\n\n  state = {\n\n    user: \"\"\n    // counterParams: [\n    //   { id: 1, value: 0 },\n    //   { id: 2, value: 2 },\n    //   { id: 3, value: 3 },\n    //   { id: 4, value: 4 },\n    // ],\n\n\n  }\n  // handleDelete = (id) => {\n\n  //   this.setState(pre => {\n\n  //     return {\n  //       counterParams: pre.counterParams.filter(e => e.id !== id)\n  //     }\n  //   })\n\n  // }\n\n  // handleIncrement = (id) => {\n  //   console.log(id)\n\n  //   this.setState(pre => {\n  //     const element = pre.counterParams.find(e => e.id === id);\n  //     const obj = { id: element.id, value: element.value + 1 }\n  //     const arr = pre.counterParams.map(e => {\n\n  //       return e.id === id ? obj : e\n  //     })\n\n  //     return {\n  //       counterParams: arr,\n  //       classNameValue: \"badge badge-primary m-2\"\n  //     }\n  //   })\n  // }\n\n  // handleDecrement = (id) => {\n  //   console.log(id)\n\n  //   this.setState(pre => {\n  //     const element = pre.counterParams.find(e => e.id === id);\n  //     const obj = { id: element.id, value: (element.value - 1) < 0 ? 0 : element.value - 1 }\n  //     const arr = pre.counterParams.map(e => {\n\n  //       return e.id === id ? obj : e\n  //     })\n\n  //     return {\n  //       counterParams: arr,\n  //       classNameValue: arr.find(e => e.id).value > 0 ? \"badge badge-primary m-2\" : \"badge badge-warning m-2\"\n  //     }\n  //   })\n  // }\n\n  // reset = () => {\n  //   console.log(\"aa\")\n  //   this.setState(pre => {\n  //     return {\n  //       counterParams: [\n  //         { id: 1, value: 0 },\n  //         { id: 2, value: 2 },\n  //         { id: 3, value: 3 },\n  //         { id: 4, value: 4 },\n\n\n  //       ],\n\n\n  //     }\n  //   })\n\n  // }\n\n  componentDidMount = () => {\n\n\n    this.setState(pre => {\n      return pre.user = localStorage.getItem(\"token\")\n        ? jwtDecode(localStorage.getItem(\"token\"))\n        : \"\"\n    })\n\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n\n\n        <main className=\"container\">\n          {/* <Route path=\"/\" component={Navbar} /> */}\n          <Route path=\"/\" render={(props) => { return <Navbar {...props} user={this.state.user} /> }} />\n\n\n          <Switch>\n\n            {/* <Route path=\"/movie/:id\" render={(props) => { return <MovieForm {...props} /> }} /> */}\n\n            {/* <ProtectedRoute path=\"/movie/:id\" component={MovieForm} />  */}\n\n            <ProtectedRoute\n              path=\"/movie/:id\"\n              showWithAuth={(props) => { return <MovieForm {...props} /> }}\n              // showWithoutAuth={(props) => { return <Redirect {...props} to=\"/login\" /> }}\n\n            />\n\n\n\n\n\n            <Route path=\"/movie\" render={(props) => { return <Movies {...props} user={this.state.user} /> }} />\n\n\n\n            <Route path=\"/login\" render={(props) => { return <LoginForm {...props} /> }} />\n            <Route path=\"/register\" render={(props) => { return <RegisterForm {...props} /> }} />\n\n            <Route path=\"/not-found\" render={(props) => { return <h1>Not found</h1> }} />\n\n            <Redirect to=\"/not-found\" />\n          </Switch>\n\n\n          {/* <Counters\n            handleDelete={this.handleDelete}\n            handleIncrement={this.handleIncrement}\n            handleDecrement={this.handleDecrement}\n            reset={this.reset}\n            state={this.state}\n          /> */}\n          {/* \n<Route path=\"/b\" render={ (props)=>{      return   <Navbar totalCounters={this.state.counterParams.length} {...props} />         }} />\n<Route path=\"/a\" component={Movies} /> */}\n\n        </main>\n\n      </React.Fragment>);\n  }\n}\n\nexport default App;\n\n\n/*function App() {\n\n\n\n\n\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n\n  );\n}*/\n\n","import React, { Component } from 'react';\r\nimport Counter from './Counter';\r\n\r\n\r\nclass Counters extends Component {\r\n\r\n    componentDidMount() {\r\nconsole.log(\"App - Mounted after rended\")\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <button className=\"btn btn-primary m-2\" onClick={this.props.reset}>Reset</button>\r\n                {\r\n                    this.props.state.counterParams.map((e) => {\r\n\r\n                        return <Counter\r\n                            //  key={e.id} counterParams={e}\r\n                            //  handleDelete={this.handleDelete}\r\n                            //  handleIncrement={this.handleIncrement} \r\n                            //  handleDecrement={this.handleDecrement}\r\n\r\n\r\n\r\n\r\n                            handleDelete={this.props.handleDelete}\r\n                            handleIncrement={this.props.handleIncrement}\r\n                            handleDecrement={this.props.handleDecrement}\r\n                            reset={this.props.reset}\r\n                            key={e.id} counterParams={e}\r\n\r\n                        >aaaa</Counter>\r\n\r\n                    })\r\n\r\n\r\n                }\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./fontawesome-free-5.12.0-web/css/all.css\"\n\nimport { BrowserRouter } from 'react-router-dom';\n\n// import Movies from \"./components/Movies\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n\n    // <Movies />\n\n\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}